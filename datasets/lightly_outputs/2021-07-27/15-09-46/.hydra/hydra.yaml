hydra:
  run:
    dir: lightly_outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '== Description ==

      The lightly Python package is a command-line tool for self-supervised learning.

      '
    footer: '== Examples ==


      Use a pre-trained resnet-18 to embed your images

      > lightly-embed input=''path/to/image/folder'' collate.input_size=224


      Load a model from a custom checkpoint to embed your images

      > lightly-embed input_dir=''path/to/image/folder'' collate.input_size=224 checkpoint=''path/to/checkpoint.ckpt''


      Train a self-supervised model on your image dataset from scratch

      > lightly-train input_dir=''path/to/image/folder'' loader.batch_size=128 collate.input_size=224
      pre_trained=False


      Train a self-supervised model starting from the pre-trained checkpoint

      > lightly-train input_dir=''path/to/image/folder'' loader.batch_size=128 collate.input_size=224


      Train a self-supervised model starting from a custom checkpoint

      > lightly-train input_dir=''path/to/image/folder'' loader.batch_size=128 collate.input_size=224
      checkpoint=''path/to/checkpoint.ckpt''


      Train using half-precision

      > lightly-train input_dir=''path/to/image/folder'' trainer.precision=16


      Upload thumbnails to the Lightly web solution

      > lightly-upload input_dir=''path/to/image/folder'' dataset_id=''your_dataset_id''
      token=''your_access_token''


      Upload only metadata of the images to the Lightly web solution

      > lightly-upload input_dir=''path/to/image/folder'' dataset_id=''your_dataset_id''
      token=''your_access_token upload=''metadata''


      Upload full images to the Lightly web solution

      > lightly-upload input_dir=''path/to/image/folder'' dataset_id=''your_dataset_id''
      token=''your_access_token'' upload=''full''


      Upload images and embeddings to the Lightly web solution

      > lightly-upload input_dir=''path/to/image/folder'' embeddings=''path/to/embeddings.csv''
      dataset_id=''your_dataset_id'' token=''your_access_token''


      Upload embeddings to the Lightly web solution

      > lightly-upload embeddings=''path/to/embeddings.csv'' dataset_id=''your_dataset_id''
      token=''your_access_token''


      Download a list of files in a given tag from the Lightly web solution

      > lightly-download tag_name=''my-tag'' dataset_id=''your_dataset_id'' token=''your_access_token''


      Download a list of files in a given tag without filenames from the parent tag
      from the Lightly web solution

      > lightly-download tag_name=''my-tag'' dataset_id=''your_dataset_id'' token=''your_access_token''
      exclude_parent_tag=True


      Copy all files in a given tag from a source directory to a target directory

      > lightly-download tag_name=''my-tag'' dataset_id=''your_dataset_id'' token=''your_access_token''
      input_dir=''data/'' output_dir=''new_data/''


      == Additional Information ==


      Use self-supervised methods to understand and filter raw image data:


      Website: https://www.lightly.ai

      Documentation: https://docs.lightly.ai'
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - token=3da03a9495362156a49127ed3a38f1a64eefda7e08800b5b
    - dataset_id=60fb047e640f1400273bf4e9
    - input_dir=./animals/
    - trainer.max_epochs=0
  job:
    name: lightly_cli
    override_dirname: dataset_id=60fb047e640f1400273bf4e9,input_dir=./animals/,token=3da03a9495362156a49127ed3a38f1a64eefda7e08800b5b,trainer.max_epochs=0
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.0
    cwd: /Users/edwardli/code/pytorch_demo_tutorial/datasets
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: lightly.cli.config
      schema: pkg
      provider: main
    - path: ''
      schema: structured
      provider: schema
    choices:
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
